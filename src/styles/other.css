*{
	margin: 0;
	padding: 0;
}
/*will-change 给不支持will-change属性的浏览器触发GPU处理器*/
.thisWillChange {
	will-change: transform;
}

/*postcss-color-rgba-fallback 给不支持rgba的ie8作降级处理*/
.rgbaFallback {
	background: rgba(0,0,0,0.5);
}

/*postcss-opacity 给不支持opacity的ie8作降级处理*/
.opacityFallback {
	opacity: 0.5;
}

/*
	postcss-pseudoelements 
	给不支持::伪元素的ie8作降级处理，
	单冒号:表示伪类
*/
.pseudo-element::before {
	content: '';
}

/*postcss-vmin 给不支持vmin的ie9作降级处理,ie9只支持vm*/
.vmFallback {
	width: 50vmin;
}

/*node-pixrem 给不支持rem的ie8作降级处理,附加px单位值*/
.remFallback {
	height: 10rem;
	font: 2rem Arial;
} 
.remFallback::before {
	content: '';
	line-height: 1rem;
}

/*
	postcss-calc 
	尽可能让calc输出静态的值
	如果它不能，需要浏览器自己根据calc()进行动态计算。
*/
@define-mixin columns_calc $count { 
	width: calc( 100% / $count );
	@if $count > 1 {
		float: left;
	} 
} 
.column_calculated {
	@mixin columns_calc 2;
}

/*postcss-color-function 提供颜色函数*/
.color-function {
	color: color(red a(90%));
	background-color: color(red lightness(50%)); /* == color(red l(50%)); */
	border-color: color(hsla(125, 50%, 50%, .4) saturation(+ 10%) w(- 20%));
}

/*postcss-write-svg 在样式表的写svg*/
@svg square {
	@rect {
		fill: var(--color, #ddd);
		width: var(--size);
		height: var(--size);
	}
}
.svg {
	width: 50px;
	height: 50px;
	background: svg(square param(--color green) param(--size 100%)) center / cover;
}

@svg square2 {
	@rect {
		fill: #555;
		width: 100%;
		height: 100%;
	}
}
.svg2 {
	margin-top: 20px;
	height: 50px;
	background: svg(square2);
}

@svg 1px-border {
	height: 2px;
	@rect {
		fill: var(--color, black);
		width: 100%;
		height: 50%;
	}
}
.border-1px-test{
	margin-top: 20px;
	height: 50px;
	border: 1px solid transparent;
	border-image: svg(1px-border param(--color, #00b1ff)) 2 2 stretch;
}

@svg square3 {
	@rect {
		fill: var(--color, #ddd);
		width: 100%;
		height: 100%;
	}
}

.border-1px-test2{
	margin-top: 20px;
	height: 50px;
	background: white svg(square3 param(--color, #00b1ff));
}

/*postcss-aspect-ratio-mini 长宽比效果*/
.aspect-box{
    position: relative;
	margin-top: 20px;
}
.aspect-box::before {
	content: '';
	display: block;
	width: 1px;
	margin-left: -1px;
	height: 0
}
.aspect-box-content{
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	width: 100%;
	height: 100%;
    background-color: red;
}
.aspect-box[aspect-ratio="16:9"]{
	aspect-ratio: '16:9';
}

/*postcss-px-to-viewport*/
.class {
  margin: 10px .5vh;
  padding: 5vmin 9.5px 1px;
  border: 3px solid black;
  border-bottom-width: 1px;
  font-size: 14px;
  line-height: 20px;
}
.class2 {
  border: 1px solid black;
  margin-bottom: 1px;
  font-size: 20px;
  line-height: 30px;
}
@media (min-width: 750px) {
  .class3 {
    font-size: 16px;
    line-height: 22px;
  }
}

/*postcss-px2rem*/
.px2rem{
	height: 375px;
	width: 375px;
	background: black;
}

/*postcss-at2x*/
.multi {
	background: url(http://example.com/image.png),
    		url(/public/images/cool.png) at-2x;
}

/*postcss-image-set*/
/*.foo {
	background-image: image-set(url(img/test.png) 1x,
                            url(img/test-2x.png) 2x,
                            url(my-img-print.png) 600dpi);
}
*/
/*postcss-responsive-type 响应式文本*/
html {
	font-size: responsive;
	min-font-size: 16px;
	max-font-size: 32px;
	lower-font-range: 375px;
	upper-font-range: 750px;
}

/*postcss-mq-keyframes 将所有关键帧从现有媒体查询中移动到样式表的底部*/
@media only screen and (min-width: 415px) {
    .pace {
        animation: pace-anim 5s;
    }
    @keyframes pace-anim {
        100% {
            opacity: 0;
        }
    }
}

/*css-mqpacker 相同的媒体查询样式合并到一个媒体查询中*/
.foo {
  width: 240px;
}

@media screen and (min-width: 768px) {
  .foo {
    width: 576px;
  }
}

.bar {
  width: 160px;
}

@media screen and (min-width: 768px) {
  .bar {
    width: 384px;
  }
}